{"uid":"707f0db30905b77d","name":"test_autocomplete","fullName":"tests.test_widgets#test_autocomplete","historyId":"7a6940c21b56d72cfcb9d1c649292d80","time":{"start":1761115268681,"stop":1761115279682,"duration":11001},"description":"\nCovers:\n- AUTOCOMPLETE WIDGET\n","descriptionHtml":"<p>Covers:</p>\n<ul>\n<li>AUTOCOMPLETE WIDGET</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6c85ce8e5+80021]\n\tGetHandleVerifier [0x0x7ff6c85ce940+80112]\n\t(No symbol) [0x0x7ff6c835060f]\n\t(No symbol) [0x0x7ff6c83a8854]\n\t(No symbol) [0x0x7ff6c83a8b1c]\n\t(No symbol) [0x0x7ff6c83fc927]\n\t(No symbol) [0x0x7ff6c83d126f]\n\t(No symbol) [0x0x7ff6c83f968a]\n\t(No symbol) [0x0x7ff6c83d1003]\n\t(No symbol) [0x0x7ff6c83995d1]\n\t(No symbol) [0x0x7ff6c839a3f3]\n\tGetHandleVerifier [0x0x7ff6c888dc7d+2960429]\n\tGetHandleVerifier [0x0x7ff6c8887f3a+2936554]\n\tGetHandleVerifier [0x0x7ff6c88a8977+3070247]\n\tGetHandleVerifier [0x0x7ff6c85e83ce+185214]\n\tGetHandleVerifier [0x0x7ff6c85efe1f+216527]\n\tGetHandleVerifier [0x0x7ff6c85d7b24+117460]\n\tGetHandleVerifier [0x0x7ff6c85d7cdf+117903]\n\tGetHandleVerifier [0x0x7ff6c85bdbb8+11112]\n\tBaseThreadInitThunk [0x0x7ffcdcede8d7+23]\n\tRtlUserThreadStart [0x0x7ffcddfdc34c+44]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6b44a571dd4ecdcb4d3688f96688600b\")>\n\n    def test_autocomplete(driver):\n        \"\"\"\n        Covers:\n        - AUTOCOMPLETE WIDGET\n        \"\"\"\n        driver.get(\"https://demoqa.com/auto-complete\")\n        wait = WebDriverWait(driver, 20)\n        remove_ads_and_footer(driver)\n    \n>       autocomplete_input = wait.until(EC.visibility_of_element_located((By.ID, \"autoCompleteMultipleInput\")))\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_widgets.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6b44a571dd4ecdcb4d3688f96688600b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021F2A8E0720>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6c85ce8e5+80021]\nE       \tGetHandleVerifier [0x0x7ff6c85ce940+80112]\nE       \t(No symbol) [0x0x7ff6c835060f]\nE       \t(No symbol) [0x0x7ff6c83a8854]\nE       \t(No symbol) [0x0x7ff6c83a8b1c]\nE       \t(No symbol) [0x0x7ff6c83fc927]\nE       \t(No symbol) [0x0x7ff6c83d126f]\nE       \t(No symbol) [0x0x7ff6c83f968a]\nE       \t(No symbol) [0x0x7ff6c83d1003]\nE       \t(No symbol) [0x0x7ff6c83995d1]\nE       \t(No symbol) [0x0x7ff6c839a3f3]\nE       \tGetHandleVerifier [0x0x7ff6c888dc7d+2960429]\nE       \tGetHandleVerifier [0x0x7ff6c8887f3a+2936554]\nE       \tGetHandleVerifier [0x0x7ff6c88a8977+3070247]\nE       \tGetHandleVerifier [0x0x7ff6c85e83ce+185214]\nE       \tGetHandleVerifier [0x0x7ff6c85efe1f+216527]\nE       \tGetHandleVerifier [0x0x7ff6c85d7b24+117460]\nE       \tGetHandleVerifier [0x0x7ff6c85d7cdf+117903]\nE       \tGetHandleVerifier [0x0x7ff6c85bdbb8+11112]\nE       \tBaseThreadInitThunk [0x0x7ffcdcede8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffcddfdc34c+44]\n\n..\\Your project\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1761115267750,"stop":1761115268680,"duration":930},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"\nCovers:\n- AUTOCOMPLETE WIDGET\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6c85ce8e5+80021]\n\tGetHandleVerifier [0x0x7ff6c85ce940+80112]\n\t(No symbol) [0x0x7ff6c835060f]\n\t(No symbol) [0x0x7ff6c83a8854]\n\t(No symbol) [0x0x7ff6c83a8b1c]\n\t(No symbol) [0x0x7ff6c83fc927]\n\t(No symbol) [0x0x7ff6c83d126f]\n\t(No symbol) [0x0x7ff6c83f968a]\n\t(No symbol) [0x0x7ff6c83d1003]\n\t(No symbol) [0x0x7ff6c83995d1]\n\t(No symbol) [0x0x7ff6c839a3f3]\n\tGetHandleVerifier [0x0x7ff6c888dc7d+2960429]\n\tGetHandleVerifier [0x0x7ff6c8887f3a+2936554]\n\tGetHandleVerifier [0x0x7ff6c88a8977+3070247]\n\tGetHandleVerifier [0x0x7ff6c85e83ce+185214]\n\tGetHandleVerifier [0x0x7ff6c85efe1f+216527]\n\tGetHandleVerifier [0x0x7ff6c85d7b24+117460]\n\tGetHandleVerifier [0x0x7ff6c85d7cdf+117903]\n\tGetHandleVerifier [0x0x7ff6c85bdbb8+11112]\n\tBaseThreadInitThunk [0x0x7ffcdcede8d7+23]\n\tRtlUserThreadStart [0x0x7ffcddfdc34c+44]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6b44a571dd4ecdcb4d3688f96688600b\")>\n\n    def test_autocomplete(driver):\n        \"\"\"\n        Covers:\n        - AUTOCOMPLETE WIDGET\n        \"\"\"\n        driver.get(\"https://demoqa.com/auto-complete\")\n        wait = WebDriverWait(driver, 20)\n        remove_ads_and_footer(driver)\n    \n>       autocomplete_input = wait.until(EC.visibility_of_element_located((By.ID, \"autoCompleteMultipleInput\")))\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_widgets.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6b44a571dd4ecdcb4d3688f96688600b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021F2A8E0720>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6c85ce8e5+80021]\nE       \tGetHandleVerifier [0x0x7ff6c85ce940+80112]\nE       \t(No symbol) [0x0x7ff6c835060f]\nE       \t(No symbol) [0x0x7ff6c83a8854]\nE       \t(No symbol) [0x0x7ff6c83a8b1c]\nE       \t(No symbol) [0x0x7ff6c83fc927]\nE       \t(No symbol) [0x0x7ff6c83d126f]\nE       \t(No symbol) [0x0x7ff6c83f968a]\nE       \t(No symbol) [0x0x7ff6c83d1003]\nE       \t(No symbol) [0x0x7ff6c83995d1]\nE       \t(No symbol) [0x0x7ff6c839a3f3]\nE       \tGetHandleVerifier [0x0x7ff6c888dc7d+2960429]\nE       \tGetHandleVerifier [0x0x7ff6c8887f3a+2936554]\nE       \tGetHandleVerifier [0x0x7ff6c88a8977+3070247]\nE       \tGetHandleVerifier [0x0x7ff6c85e83ce+185214]\nE       \tGetHandleVerifier [0x0x7ff6c85efe1f+216527]\nE       \tGetHandleVerifier [0x0x7ff6c85d7b24+117460]\nE       \tGetHandleVerifier [0x0x7ff6c85d7cdf+117903]\nE       \tGetHandleVerifier [0x0x7ff6c85bdbb8+11112]\nE       \tBaseThreadInitThunk [0x0x7ffcdcede8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffcddfdc34c+44]\n\n..\\Your project\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"103b5748bd65a850","name":"Screenshot on failure","source":"103b5748bd65a850.png","type":"image/png","size":12274}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1761115279724,"stop":1761115280988,"duration":1264},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_widgets"},{"name":"host","value":"ASCENDI-FVU8NJL"},{"name":"thread","value":"9020-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_widgets"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"707f0db30905b77d.json","parameterValues":[]}