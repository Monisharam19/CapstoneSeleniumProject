{"name": "test_frame_handling", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6c85ce8e5+80021]\n\tGetHandleVerifier [0x0x7ff6c85ce940+80112]\n\t(No symbol) [0x0x7ff6c835060f]\n\t(No symbol) [0x0x7ff6c83a8854]\n\t(No symbol) [0x0x7ff6c83a8b1c]\n\t(No symbol) [0x0x7ff6c83fc927]\n\t(No symbol) [0x0x7ff6c83d126f]\n\t(No symbol) [0x0x7ff6c83f968a]\n\t(No symbol) [0x0x7ff6c83d1003]\n\t(No symbol) [0x0x7ff6c83995d1]\n\t(No symbol) [0x0x7ff6c839a3f3]\n\tGetHandleVerifier [0x0x7ff6c888dc7d+2960429]\n\tGetHandleVerifier [0x0x7ff6c8887f3a+2936554]\n\tGetHandleVerifier [0x0x7ff6c88a8977+3070247]\n\tGetHandleVerifier [0x0x7ff6c85e83ce+185214]\n\tGetHandleVerifier [0x0x7ff6c85efe1f+216527]\n\tGetHandleVerifier [0x0x7ff6c85d7b24+117460]\n\tGetHandleVerifier [0x0x7ff6c85d7cdf+117903]\n\tGetHandleVerifier [0x0x7ff6c85bdbb8+11112]\n\tBaseThreadInitThunk [0x0x7ffcdcede8d7+23]\n\tRtlUserThreadStart [0x0x7ffcddfdc34c+44]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a981c858c52e235153ee54fde3f83dbd\")>\n\n    def test_frame_handling(driver):\n        \"\"\"\n        Covers:\n        - FRAME HANDLING\n        \"\"\"\n        driver.get(\"https://demoqa.com/frames\")\n        wait = WebDriverWait(driver, 20)\n        remove_ads_and_footer(driver)\n    \n        # Switch to the frame\n        wait.until(EC.frame_to_be_available_and_switch_to_it((By.ID, \"frame1\")))\n    \n        # Interact with element inside the frame\n        frame_text = wait.until(EC.visibility_of_element_located((By.ID, \"sampleHeading\"))).text\n        assert \"This is a sample page\" in frame_text\n        print(f\"Successfully read text from inside the frame: '{frame_text}'\")\n    \n        # Switch back to the main document\n        driver.switch_to.default_content()\n    \n        # FIX: Remove ads again after context switch as they might reload\n        remove_ads_and_footer(driver)\n    \n        # Wait for the main header to be visible after switching back\n>       main_header = wait.until(EC.visibility_of_element_located((By.CLASS_NAME, \"main-header\")))\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_advanced_actions.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a981c858c52e235153ee54fde3f83dbd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021F274D6AC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6c85ce8e5+80021]\nE       \tGetHandleVerifier [0x0x7ff6c85ce940+80112]\nE       \t(No symbol) [0x0x7ff6c835060f]\nE       \t(No symbol) [0x0x7ff6c83a8854]\nE       \t(No symbol) [0x0x7ff6c83a8b1c]\nE       \t(No symbol) [0x0x7ff6c83fc927]\nE       \t(No symbol) [0x0x7ff6c83d126f]\nE       \t(No symbol) [0x0x7ff6c83f968a]\nE       \t(No symbol) [0x0x7ff6c83d1003]\nE       \t(No symbol) [0x0x7ff6c83995d1]\nE       \t(No symbol) [0x0x7ff6c839a3f3]\nE       \tGetHandleVerifier [0x0x7ff6c888dc7d+2960429]\nE       \tGetHandleVerifier [0x0x7ff6c8887f3a+2936554]\nE       \tGetHandleVerifier [0x0x7ff6c88a8977+3070247]\nE       \tGetHandleVerifier [0x0x7ff6c85e83ce+185214]\nE       \tGetHandleVerifier [0x0x7ff6c85efe1f+216527]\nE       \tGetHandleVerifier [0x0x7ff6c85d7b24+117460]\nE       \tGetHandleVerifier [0x0x7ff6c85d7cdf+117903]\nE       \tGetHandleVerifier [0x0x7ff6c85bdbb8+11112]\nE       \tBaseThreadInitThunk [0x0x7ffcdcede8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffcddfdc34c+44]\n\n..\\Your project\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "\nCovers:\n- FRAME HANDLING\n", "attachments": [{"name": "Screenshot on failure", "source": "63b7146f-f6b2-4f12-86b1-d42a067d627b-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "fc080b3c-fd07-43f5-bf0d-c43d3a3fc7b5-attachment.txt", "type": "text/plain"}], "start": 1761114943159, "stop": 1761114960386, "uuid": "d18650f5-6c59-4a24-8987-5faa5b9adfc4", "historyId": "ef6b9ae4db31c5cdfadd9df535bb2c71", "testCaseId": "ef6b9ae4db31c5cdfadd9df535bb2c71", "fullName": "tests.test_advanced_actions#test_frame_handling", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_advanced_actions"}, {"name": "host", "value": "ASCENDI-FVU8NJL"}, {"name": "thread", "value": "9020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_advanced_actions"}], "titlePath": ["tests", "test_advanced_actions.py"]}